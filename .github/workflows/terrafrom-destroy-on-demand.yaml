name: Terraform 

on:
  push:
    branches:
      - "dev"
  workflow_dispatch:
    branches: "dev"

env:
  tf_version: "1.8.0"
  tg_version: "0.56.5"
  working_dir: '.'

jobs:
  terragrunt-terraform:
    name: Destroy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region eu-central-1
          aws configure set default.output json
      
      - name: Init
        uses: gruntwork-io/terragrunt-action@v2
        id: init
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all init -upgrade'
      
      - name: Moving AWS creds
        shell: bash
        run: |
          # This will copy our creds to the workspace, which, GitHub will mount to the action's container
          cp -r ~/.aws .
      
      - name: Destroy
        uses: gruntwork-io/terragrunt-action@v2
        env:
          # /github/workspace is path in container, aka /home/runner/workspace.. in GHA Runner
          AWS_SHARED_CREDENTIALS_FILE: /github/workspace/.aws/credentials
        id: destroy
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all destroy'

      - name: Decode Terraform output
        id: decode
        # output from terragrunt docker container is unreadable
        run: |  
          decoded_output=$(echo "${{ steps.destroy.outputs.tg_action_output }}" | sed 's/%0A/\n/g' | sed 's/%3C=/<=/g')
          echo "decoded_output=${decoded_output}" >> $GITHUB_OUTPUT
          
      
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ${{ steps.decode.outputs.decoded_output }}