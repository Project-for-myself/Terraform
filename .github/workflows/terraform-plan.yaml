name: Terraform Plan

on: 
#  pull_request:
  push:
    branches:
      - "dev"
  workflow_dispatch:
    branches: "dev"

env:
  tf_version: "1.8.0"
  tg_version: "0.56.5"
  working_dir: '.'

jobs:
  terragrunt-terraform:
    name: Plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region eu-central-1
          aws configure set default.output json

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'
      
      - name: Init
        uses: gruntwork-io/terragrunt-action@v2
        id: init
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all init -upgrade'
      
      - name: Validate
        uses: gruntwork-io/terragrunt-action@v2
        id: validate
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all validate'
      
      - name: Moving AWS creds
        shell: bash
        run: |
          # This will copy our creds to the workspace, which, GitHub will mount to the action's container
          cp -r ~/.aws .
      
      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        env:
          # /github/workspace is path in container, aka /home/runner/workspace.. in GHA Runner
          AWS_SHARED_CREDENTIALS_FILE: /github/workspace/.aws/credentials
        id: plan
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all plan'
      
      - name: Decode Terraform Plan
        id: decode-plan
        run: |
          decoded_output=$(echo "${{ steps.plan.outputs.tg_action_output }}" | sed 's/%0A/\n/g' | sed 's/%3C=/<=/g')
    #      output=$(echo "::set-output name=decoded_output::${decoded_output}")

      - name: Update PR
        uses: actions/github-script@v3
        id: plan-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`hcl
            ${{ steps.decode-plan.outputs.decoded_output }}
            \`\`\`
            </details>
            **Pusher**: @${{ github.actor }}
            **Action**: ${{ github.event_name }}
            `;
            if (context.payload.pull_request) {
              github.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            } else {
              console.log('Not a pull request event. Skipping comment creation.');
            }
        
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '${{ steps.decode-plan.outputs.decoded_output }}'