name: Terraform Plan

on: pull_request

env:
  TF_WORKSPACE: "terraform-plan-github-action"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  tf_version: "1.8.0"
  tg_version: "0.56.5"
  working_dir: 'project'

jobs:
  terragrunt-terraform:
    name: Plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'
      
      - name: Format
        uses: gruntwork-io/terragrunt-action@v2
        id: fmt
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all fmt'
        continue-on-error: true
      
      - name: Init
        uses: gruntwork-io/terragrunt-action@v2
        id: init
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all fmt init -upgrade'
      
      - name: Validate
        uses: gruntwork-io/terragrunt-action@v2
        id: validate
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'run-all fmt init -upgrade'
      
      # - name: Plan
      #   uses: gruntwork-io/terragrunt-action@v2
      #   env:
      #     # /github/workspace is path in container, aka /home/runner/workspace.. in GHA Runner
      #     AWS_SHARED_CREDENTIALS_FILE: /github/workspace/.aws/credentials
      #   id: plan
      #   with:
      #     tf_version: ${{ env.tf_version }}
      #     tg_version: ${{ env.tg_version }}
      #     tg_dir: ${{ env.working_dir }}
      #     tg_command: 'run-all fmt init -upgrade'
      #   run: terraform plan -no-color

      # - name: Update PR
      #   uses: actions/github-script@v6
      #   id: plan-comment
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      #       <details><summary>Show Plan</summary>
      #       \`\`\`hcl
      #       ${process.env.PLAN}
      #       \`\`\`
      #       </details>
      #       **Pusher**: @${{ github.actor }}
      #       **Action**: ${{ github.event_name }}
      #       `;
      #       // Delete previous comment so PR timeline makes sense
      #       if (botComment) {
      #         github.rest.issues.deleteComment({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           comment_id: botComment.id,
      #         });
      #       }
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       });

